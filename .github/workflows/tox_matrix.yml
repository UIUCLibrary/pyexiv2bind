on: [push, pull_request]
name: Tox Multi-platform Compatibility Test
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - os: macos-latest
            compiler_libcxx: libc++
            conan_user_home: "/Users/runner"
          - os: ubuntu-latest
            compiler_libcxx: libstdc++11
            conan_user_home: "/home/runner"
          - os: windows-2019
            conan_user_home: 'C:/Users/runneradmin'
      fail-fast: false
    name: Python ${{ matrix.python-version }} ${{ matrix.os }} build
    steps:

      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: "install Python dependencies"
        run: |
          pip install wheel
          pip install -r requirements-dev.txt
      - uses: actions/cache@v3
        id: cache
        with:
          path: "${{ matrix.conan_user_home }}/.conan"
          key: ${{ runner.os }}-${{ hashFiles('**/conanfile.py') }}

      - name: Build conan packages on Non-Windows Operating Systems
        if: ${{ !contains(matrix.os, 'windows') && steps.cache.outputs.cache-hit != 'true' }}
        env:
          CONAN_COMPILER_LIBCXX: ${{ matrix.compiler_libcxx }}
          CONAN_USER_HOME: ${{ matrix.conan_user_home }}
        run: |
          cc --version &&  cc -dumpfullversion -dumpversion 
          pip install -r requirements-dev.txt
          if conan profile show default; then echo 'profile exists'; else conan profile new default --detect; fi
          conan config init
          python3 ci/docker/shared/conan/ensure_compiler_support_by_conan.py $(conan config home)/settings.yml $(cc -dumpfullversion -dumpversion | grep -oE  "^([0-9]+(\.)?)([0-9]+?)")
          conan config set general.revisions_enabled=1
          if [[ -z "$CONAN_COMPILER_LIBCXX" ]]; then echo 'CONAN_COMPILER_LIBCXX is not defined'; else conan profile update settings.compiler.libcxx=$CONAN_COMPILER_LIBCXX default; fi
          conan install  . --build missing --build openjpeg --no-import -pr:b=default

      - uses: actions/github-script@v7
        id: tox-env
        with:
            result-encoding: string
            script: |
              return "py${{matrix.python-version}}".replace('.','')
      - name: Run tox
        if: contains(matrix.os, 'windows')
        shell: cmd
        run: |
          rmdir /S /Q C:\\Strawberry
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          pip install -r requirements-dev.txt
          conan config init
          conan config set general.revisions_enabled=1
          conan profile new default --detect
          conan install . --build  missing --no-import 
          tox -e ${{ steps.tox-env.outputs.result }}
        env:
          CONAN_USER_HOME: "C:/Users/runneradmin"
      - name: Run tox
        if: "!contains(matrix.os, 'windows')"
        run: cc --version &&  cc -dumpfullversion -dumpversion && tox -e ${{ steps.tox-env.outputs.result }} -vvv
        env:
          CONAN_COMPILER_LIBCXX: ${{ matrix.compiler_libcxx }}
          CONAN_USER_HOME: ${{ matrix.conan_user_home }}

